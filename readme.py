#-*- coding:utf-8 -*
# 掌握基础语法知识和一些核心特性-->脚本，应用，代码 
看书,手册 -->形成自己的知识体系

python 只是个工具
基本语法-->熟悉实用包-->解决实际需求

# python能做什么 后端 爬虫 数据分析 脚本
# 自学没有场景感
# 学python,比较好快速找到应用场景。如果马上可以解决工作生活中的问题，用python实现
#称之为-->"设计式操练"

1, 确定体系，确定方向
用python无非三种，运维，web开发，数据分析/算法
#  爬虫，web开发，科学计算，游戏，图形开发..

# 刚开始选择爬虫作为学习Pyton的方向
# 爬取图片，电影资源，检票 
# 重点放在web flask/django上 

# 爬虫 
# 基本爬取数据没问题之后，学scrapy-->mongodb-->数据量大了考虑数据分析

2，选择项目，解决问题
3, 快速输出，由此及彼 
学习是一个输入的过程，而项目和文章是输出，高质量的输出是检测学习效果的最好方式
# falsk/django --> 个人博客

提高
1，动手开发小项目，比如爬虫网站
2，了解一些高级用法，列表解析式，装饰器之类
3, 熟悉python高级用法，学习代码架构逻辑
高级语法: 上下文管理器,装饰器,错误处理 
各种内置包: 正则表达式...

每天都要找时间写点东西。。哪怕很少的代码
最快的学习其实就是跟项目



