#-*- coding:utf-8 -*-
主题： 基本语法 编程风格 内存管理机制 
1， 标识符和关键字
__xxx__:系统定义的名字
__xxx:类中的私有变量

2, 编程风格
尽量使用局部变量代替全局变量,好处：易维护，提高性能，节省内存

3, 内存管理
Python是一种解释性语言，对象的类型和内存占用都是运行时确定的，在赋值时解释器会根据语法和右侧的操作数来决定新对象的类型.
Python内部记录着所有使用中的对象各有多少引用，一个内部跟踪变量称为引用计数器。 每个对象各有多少个引用，简称引用计数。当对象被创建时，就创建了一个引用计数，当这个对象不再需要时(这个对象的引用计数为0时)，就被垃圾回收

Python的垃圾收集器实际上是一个引用计数器和循环垃圾收集器。当一个对象的引用计数为0，解释器会释放掉这个对象和仅有这个对象可访问的其他对象。作为引用计数的补充，垃圾收集器也会留心被分配的总量很大。在这种情况下，解释器会暂停下来，试图清理所有未引用的循环
del obj：删除对象的最后一个引用，也就是该对象的引用计数会减为0，使该对象就成为垃圾回收机制的回收对象。






